#!/bin/sh

error_exit() {
	echo "${@}"
	exit 1
}

if [ "${2}" != "POST-INSTALL" ]; then
	exit 0
fi

if [ ! -f ${PKG_ROOTDIR}/boot/loader.efi ]; then
	error_exit "EFI loader not found"
fi

if [ ! -d ${PKG_ROOTDIR}/boot/efi ]; then
	mkdir -p ${PKG_ROOTDIR}/boot/efi
fi

arch=$(uname -p)
rootfs=$(mount -p 2>/dev/null | awk '$2 ~ /^\/$/ {print $3}')
case ${rootfs} in
	ufs)
		bootdevs=$(mount -p 2>/dev/null | awk '$2 ~ /^\/$/ { match($1, "[[:alpha:]/]+[[:digit:]]+"); print substr($1, RSTART, RLENGTH); }')
		;;
	zfs)
		zpool=$(mount -p 2>/dev/null | awk '$2 ~ /^\/$/ { split($1, zroot, "/"); print zroot[1]; }')
		bootdevs=$(zpool status -P ${zpool} | awk '$1 ~/^\/dev\// { match($1, "[[:alpha:]/]+[[:digit:]]+"); dev = substr($1, RSTART, RLENGTH); devs = devs dev " "} END { print devs; }')
		;;
	*)
		error_exit "Cannot determine boot devices"
		;;
esac

if [ -n "$(mount -p 2>/dev/null | awk '$2 ~/\/boot\/efi/')" ]; then
	if umount ${PKG_ROOTDIR}/boot/efi 2>&- >> /dev/null; then
		rm -rf ${PKG_ROOTDIR}/boot/efi/*
	else
		error_exit "Failed to unmount ${PKG_ROOTDIR}/boot/efi"
	fi
fi

for dev in ${bootdevs}; do
	efipart=$(gpart show -p $dev | awk '$4 ~ /efi/ {print $3}')
	if [ -n "$efipart" ]; then
		umount ${PKG_ROOTDIR}/dev/${efipart} 2>&- >> /dev/null
		{ mount_msdosfs ${PKG_ROOTDIR}/dev/${efipart} ${PKG_ROOTDIR}/boot/efi && trap "umount ${PKG_ROOTDIR}/boot/efi >> /dev/null 2>&-" 1 2 17 EXIT; } || \
			error_exit "Couldn't mount ${PKG_ROOTDIR}/dev/${efipart} to ${PKG_ROOTDIR}/boot/efi"
		echo "Updating EFI loader in ESP ${efipart}"
		mkdir -p ${PKG_ROOTDIR}/boot/efi/efi/boot/
		mkdir -p ${PKG_ROOTDIR}/boot/efi/efi/freebsd/
		install -vS ${PKG_ROOTDIR}/boot/loader.efi ${PKG_ROOTDIR}/boot/efi/efi/freebsd/ || error_exit "Failed to update ${PKG_ROOTDIR}/boot/loader.efi"
		_archboot=""
		if [ "${arch}" = "aarch64" ]; then
			_archboot="BOOTaa64.efi"
		elif [ "${arch}" = "amd64" ]; then
			_archboot="BOOTx64"
		fi
		if [ -n "${_archboot}" ]; then
			install -vS ${PKG_ROOTDIR}/boot/loader.efi ${PKG_ROOTDIR}/boot/efi/efi/boot/${_archboot}.efi || error_exit "Failed to update ${PKG_ROOTDIR}/boot/${_archboot}.efi"
		fi
		umount ${PKG_ROOTDIR}/boot/efi || error_exit "Failed to unmount ${PKG_ROOTDIR}/dev/${efipart} at ${PKG_ROOTDIR}/boot/efi"
	fi
done
